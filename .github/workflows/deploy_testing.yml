name: Testing Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests on Testing Branch
    runs-on: ubuntu-latest

    env:
      LOGS_DIR: logs
      FIREBASE_CREDENTIALS_PATH: "/home/runner/work/EthicalHackingPlatform/EthicalHackingPlatform/firebase.json"
      VALID_API_KEYS: ${{ secrets.VALID_API_KEYS }}

      # Email Credentials
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}

      # Discord WebHooks
      API_LOGS_DISCORD_WEBHOOK: ${{ secrets.API_LOGS_DISCORD_WEBHOOK }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Decode and Create Firebase Credentials File
        run: echo "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 --decode > $FIREBASE_CREDENTIALS_PATH

      - name: Verify Firebase Credentials File Exists
        run: |
          if [ -f "$FIREBASE_CREDENTIALS_PATH" ]; then
            echo "✅ Firebase credentials file exists at: $FIREBASE_CREDENTIALS_PATH"
          else
            echo "❌ Firebase credentials file NOT found!" && exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Create Firebase Credentials File
        run: echo "$FIREBASE_CREDENTIALS" > $FIREBASE_CREDENTIALS_PATH

      - name: Verify Firebase File Exists
        run: cat $FIREBASE_CREDENTIALS_PATH

      - name: Create logs directory
        run: mkdir -p logs

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run Backend Tests
        run: |
          cd backend
          pytest

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm run test

      - name: Push Code to Testing Branch
        if: success()
        run: |
          git fetch origin
          git checkout testing
          git merge --no-ff main -m "Auto-merge from main after successful tests"
          git push origin testing
