name: Testing Pipeline

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    name: Running Tests before Deploying to Testing Branch
    runs-on: ubuntu-latest

    env:
      LOGS_DIR: logs
      VALID_API_KEYS: ${{ secrets.VALID_API_KEYS }}
      FIREBASE_CREDENTIALS_BASE64: ${{ secrets.FIREBASE_CREDENTIALS }}

      # Email Credentials
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}

      # Discord WebHooks
      API_LOGS_DISCORD_WEBHOOK: ${{ secrets.API_LOGS_DISCORD_WEBHOOK }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Create logs directory
        run: mkdir -p logs

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run Backend Tests
        run: pytest

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm run test

      - name: Clean Up Temporary Files
        run: |
          rm -rf frontend/node_modules logs backend/__pycache__*
          echo "Temporary files removed successfully"

  deploy-to-testing:
    name: Deploying to Testing Branch
    runs-on: ubuntu-latest
    needs: run-tests 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git for GitHub Actions
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/Harrysibbenga/EthicalHackingPlatform.git

      - name: Merge Main into Testing
        run: |
          git fetch origin
          git checkout testing || git checkout -b testing origin/testing
          git merge --no-ff main -m "Auto-merge from main after successful tests"
          git push origin testing